const t=JSON.parse('{"key":"v-762645fb","path":"/blogs/articles/designpattern/1.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html","title":"面向对象三大基本特征、五大基本原则](1.面向对象.md)","lang":"zh-CN","frontmatter":{"title":"面向对象三大基本特征、五大基本原则](1.面向对象.md)","icon":"laptop-code","date":"2024-05-23T00:00:00.000Z","star":false,"order":1,"category":["设计模式"],"tag":["设计模式","面向对象"],"description":"1.面向对象的三大基本特征 1.1.封装 封装就是把现实世界中的客观事物抽象成一个Java类，然后在类中存放属性和方法。如封装一个 汽车 类，其中包含了 发动机、轮胎、底盘 等性，并且有 启动、前进 等方法。 1.2.继承 像现实世界中儿子可以继承父亲的财产、样貌、行为等一样，编程世界中也有继承，继承的主要目的就是为了复用。子类可以继承父类，这样就可以把父类的属性和方法继承过来。 颜色 等属性，奔跑 等行为。如Dog类可以继承Animal类，继承过来巴吃东西 1.3.多态 多态是指在父类中定义的方法被子类继承之后，可以通过重写，使得父类和子类具有不同的实现，这使得同一个方法在父类及其各个子类中具有不同含义。","head":[["meta",{"property":"og:url","content":"https://weige212.github.io/blogs/articles/designpattern/1.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html"}],["meta",{"property":"og:site_name","content":"WEI的知识库"}],["meta",{"property":"og:title","content":"面向对象三大基本特征、五大基本原则](1.面向对象.md)"}],["meta",{"property":"og:description","content":"1.面向对象的三大基本特征 1.1.封装 封装就是把现实世界中的客观事物抽象成一个Java类，然后在类中存放属性和方法。如封装一个 汽车 类，其中包含了 发动机、轮胎、底盘 等性，并且有 启动、前进 等方法。 1.2.继承 像现实世界中儿子可以继承父亲的财产、样貌、行为等一样，编程世界中也有继承，继承的主要目的就是为了复用。子类可以继承父类，这样就可以把父类的属性和方法继承过来。 颜色 等属性，奔跑 等行为。如Dog类可以继承Animal类，继承过来巴吃东西 1.3.多态 多态是指在父类中定义的方法被子类继承之后，可以通过重写，使得父类和子类具有不同的实现，这使得同一个方法在父类及其各个子类中具有不同含义。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://weige212.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-11T14:39:30.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"面向对象三大基本特征、五大基本原则](1.面向对象.md)"}],["meta",{"property":"article:author","content":"Mr.WEI"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:tag","content":"面向对象"}],["meta",{"property":"article:published_time","content":"2024-05-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-11T14:39:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"面向对象三大基本特征、五大基本原则](1.面向对象.md)\\",\\"image\\":[\\"https://weige212.github.io/\\"],\\"datePublished\\":\\"2024-05-23T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-11T14:39:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.WEI\\"}]}"]]},"headers":[{"level":3,"title":"1.面向对象的三大基本特征","slug":"_1-面向对象的三大基本特征","link":"#_1-面向对象的三大基本特征","children":[]},{"level":3,"title":"2.面向对象的五大基本原则","slug":"_2-面向对象的五大基本原则","link":"#_2-面向对象的五大基本原则","children":[]}],"git":{"createdTime":1746974370000,"updatedTime":1746974370000,"contributors":[{"name":"zhaowei","email":"351833699@qq.com","commits":1}]},"readingTime":{"minutes":3.01,"words":903},"filePathRelative":"blogs/articles/designpattern/1.面向对象.md","localizedDate":"2024年5月23日","excerpt":"<h3> 1.面向对象的三大基本特征</h3>\\n<h4> 1.1.封装</h4>\\n<p>封装就是把现实世界中的客观事物抽象成一个Java类，然后在类中存放属性和方法。如封装一个 汽车 类，其中包含了 发动机、轮胎、底盘 等性，并且有 启动、前进 等方法。</p>\\n<h4> 1.2.继承</h4>\\n<p>像现实世界中儿子可以继承父亲的财产、样貌、行为等一样，编程世界中也有继承，继承的主要目的就是为了复用。子类可以继承父类，这样就可以把父类的属性和方法继承过来。\\n颜色 等属性，奔跑 等行为。如Dog类可以继承Animal类，继承过来巴吃东西</p>\\n<h4> 1.3.多态</h4>\\n<p>多态是指在父类中定义的方法被子类继承之后，可以通过重写，使得父类和子类具有不同的实现，这使得同一个方法在父类及其各个子类中具有不同含义。</p>","autoDesc":true}');export{t as data};
